<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.tynet.saas</groupId>
        <artifactId>base</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>base-api</artifactId>
    <url>https://github.com/JoeyBling</url>
    <description>API接口网关实现</description>

    <properties>
        <!-- Special VM Properties（VM Options：JVM参数） -->
        <!--<argLine>-Dfile.encoding=UTF-8</argLine>-->
    </properties>

    <!-- 依赖项定义 -->
    <dependencies>
        <!-- 本地模块 -->
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>base-core</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>base-pojo</artifactId>
        </dependency>
        <!-- 在yml中读取pom.xml配置使用 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- https://stackoverflow.com/q/60021815/8470159 -->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>-->
        <!-- spring-web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- redis依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <!-- 分布式锁：https://github.com/redisson/redisson -->
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson-spring-boot-starter</artifactId>
            <version>3.18.0</version>
        </dependency>
        <!-- 定时任务 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>
        <!-- 属性迁移器（2.0迁移后没问题删除） -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-properties-migrator</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- 应用监控Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- 阿尔萨斯（Java诊断工具） -->
        <dependency>
            <groupId>com.taobao.arthas</groupId>
            <artifactId>arthas-spring-boot-starter</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Testing Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- TODO del it -->
                <!--<exclusion>
                    <groupId>org.ow2.asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>-->
                <!-- `junit-vintage-engine`用于运行JUnit 4测试；`junit-jupiter-engine`用于JUnit 5测试 -->
                <!--<exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>-->
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <!-- druid连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>
        <!-- MyBatis-Plus -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- 国产工具包 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-crypto</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-http</artifactId>
        </dependency>
    </dependencies>

    <!-- 构建管理 -->
    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 -->
                <excludes>
                    <exclude>conf/**</exclude>
                </excludes>
                <includes>
                    <include>**/**</include>
                </includes>
            </resource>
            <resource>
                <!-- 某些时候IDEA运行失效 -->
                <directory>${basedir}/src/main/resources</directory>
                <!-- 资源过滤功能 -->
                <filtering>true</filtering>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.yaml</include>
                    <include>**/*.properties</include>
                    <include>**/*.txt</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources/conf/${package.environment}</directory>
            </resource>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 排除依赖 - 默认会包括所有`provided`的依赖（include any `provided`） -->
                    <excludeGroupIds>
                        org.projectlombok,
                        com.taobao.arthas,
                    </excludeGroupIds>
                </configuration>
            </plugin>
            <plugin>
                <!-- https://maven.apache.org/surefire/maven-surefire-plugin/examples/skipping-tests.html -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- 跳过测试阶段或者使用 `mvn clean package -Dmaven.test.skip=true` -->
                    <skipTests>${maven.test.skip}</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- https://youtrack.jetbrains.com/issue/IDEA-107048#focus=streamItem-27-2380176.0-0 -->
            <id>intellij-workaround</id>
            <properties>
                <!-- 解决Maven命令行本地运行：clean install -P intellij-workaround -->
                <pre-release.dependencies.scope>compile</pre-release.dependencies.scope>
                <spring.boot.dependencies.scope>compile</spring.boot.dependencies.scope>
            </properties>
        </profile>
        <profile>
            <!-- 单元测试 -->
            <id>unit-test</id>
            <properties>
                <maven.test.skip>false</maven.test.skip>
            </properties>
        </profile>
        <profile>
            <!-- 开发环境 -->
            <id>dev</id>
            <properties>
                <package.environment>dev</package.environment>
                <!-- 预发布模块依赖项范围 -->
                <pre-release.dependencies.scope>compile</pre-release.dependencies.scope>
            </properties>
        </profile>
        <profile>
            <!-- 生产环境 -->
            <id>master</id>
            <properties>
                <package.environment>master</package.environment>
            </properties>
        </profile>
        <profile>
            <!--
            最高优先级
            根据`profile`定义的先后顺序来进行覆盖取值，后面定义的会覆盖前面
            并不是根据`activeProfile`定义的顺序 & `-P`命令行参数
            -->
            <id>priority</id>
            <properties>
                <!-- 预发布模块依赖项范围 -->
                <pre-release.dependencies.scope>test</pre-release.dependencies.scope>
            </properties>
        </profile>
    </profiles>

</project>
