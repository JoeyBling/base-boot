<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" scanPeriod="3600 seconds" debug="false">

    <contextName>logback</contextName>
    <!-- 日志输出配置 -->
    <property name="log.path" value="${catalina.base:-.}/logs"/>
    <property name="log.name" value="base-api"/>
    <property name="log.pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n"/>
    <property name="log.pattern.detail"
              value="[%p][%d{yyyy-MM-dd HH:mm:ss}] %c{1} [%file:%L] - %m%n"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr"
                    converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr([%d{yyyy-MM-dd HH:mm:ss}]){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%c{1}:%L]){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!-- 标准日志输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>
            <!-- 由于走`Mvn`命令启动Tomcat默认编码为GBK，此处不进行设置 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 简单日志输出 -->
    <appender name="STDOUT_SIMPLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- SQL输出 -->
    <appender name="STDOUT_SQL" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 慢SQL输出 -->
    <appender name="STDOUT_SLOW_SQL" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}] %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 基础日志输出 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/${log.name}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/${log.name}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 保留多少天的日志 -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <!-- 每个日志文件的大小 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] %logger{10} [%file:%line] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 错误级别日志 -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/${log.name}-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/${log.name}-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 保留多少天的日志 -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <!-- 每个日志文件的大小 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] %logger{10} [%file:%line] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
    </appender>

    <!-- com.alibaba.druid.filter.logging.LogFilter -->
    <logger name="druid.sql.Statement" level="ERROR"></logger>

    <!--<logger name="druid.sql.Statement" level="DEBUG">
        <appender-ref ref="STDOUT_SQL"/>
    </logger>-->

    <!-- 解决SQL日志打印2次的问题 -->
    <!--<logger name="java.sql.PreparedStatement" level="DEBUG"></logger>-->

    <logger name="com.alibaba.druid.filter.stat.StatFilter"
            level="ERROR,slowsql" additivity="false">
        <appender-ref ref="STDOUT_SLOW_SQL"/>
        <appender-ref ref="FILE"/>
    </logger>

    <logger name="org.springframework" level="INFO"></logger>

    <logger name="com.tynet" level="DEBUG"></logger>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="FILE_ERROR"/>
    </root>

</configuration>
