# https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Configuration-Changelog
# https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3.0-Configuration-Changelog
# https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.4.0-Configuration-Changelog
# https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Config-Data-Migration-Guide
debug: false

server:
  # 第三位单数是正式环境，双数为测试环境
  port: 8767
  tomcat:
    uri-encoding: UTF-8
    accesslog:
      enabled: true
      encoding: UTF-8
  error:
    include-exception: true
    include-message: always
    include-binding-errors: always

spring:
  #  profiles:
  #    active: dev
  #  config:
  #    import: optional:classpath:/application-dev.yml
  application:
    name: ${application.name:test}
  aop:
    auto: true
    proxy-target-class: true
  task:
    scheduling:
      pool:
        size: 5
  jackson:
    default-property-inclusion: non_null
    # 取消timestamps形式
    serialization: { WRITE_DATES_AS_TIMESTAMPS: false, WRITE_ENUMS_USING_TO_STRING: true }
    deserialization: { FAIL_ON_UNKNOWN_PROPERTIES: true }
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  datasource:
    # driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/bootplus?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    druid:
      initial-size: 2
      max-active: 20
      min-idle: 3
      max-wait: 60000
      validation-query: SELECT 1 FROM DUAL
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      # 合并执行的相同sql、慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;password=${spring.datasource.password}
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 配置多个英文逗号分隔
      # filters: stat,wall,slf4j
      filter:
        stat:
          enabled: true
        wall:
          enabled: true
          config:
            # 批量操作
            multi-statement-allow: true
        slf4j:
          enabled: true
      web-stat-filter:
        enabled: false
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
      # druid监控配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: www.hztywl.cn
        reset-enable: true
        allow: 192.168.0.1/16

  jpa:
    open-in-view: false
  quartz:
    # 覆盖已存在的任务
    overwrite-existing-jobs: true

# mybatis
mybatis:
  mapper-locations:
    - classpath*:/mapper/**/*.xml
  type-aliases-package: com.tynet.module.**.model,com.tynet.module.**.domain
  type-aliases-super-type: com.tynet.frame.prj.model.Entity
  configuration:
    map-underscore-to-camel-case: true
    # log-prefix: bootplus.dao.

# MyBatis-Plus
mybatis-plus:
  type-aliases-package: ${mybatis.type-aliases-package:}
  type-aliases-super-type: ${mybatis.type-aliases-super-type:}
  configuration:
    map-underscore-to-camel-case: true
    # log-prefix: bootplus.dao.
  global-config:
    db-config:
      table-underline: true

management:
  endpoint:
    health:
      show-details: always
    arthas:
      enabled: true
  info:
    java:
      # https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.6-Release-Notes
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - env
          - beans
          - arthas

arthas:
  agent-id: ${application.name:${spring.application.name:random}}

################################### 程序自定义配置 ###################################

application:
  debug: true
  # client-id: test
  # 波浪线 - 代表空值
  client-id: ~
  name: @project.artifactId@
  version: @project.version@
  url: @project.url@
  domain: https://dev-saas.diandianys.com/
  storage-path: @project.basedir@
  cache-config:
    # {@link java.time.Duration#parse}
    default-expire: PT60M
    expire-map: { SMARTHOS_TOKEN: PT24H, SMARTHOS_CONFIG: PT24H, SMARTHOS_CAPTCHA: PT10M }
    cache-prefix: base
  # 定时任务配置
  task:
    # 自定义线程池配置
    thread-pool:
      core-pool-size: 5
      max-pool-size: 2000
      queue-capacity: 200
      keep-alive: PT20S
      thread-name-prefix: ${application.name:zhousiwei}-task-
  mvc:
    view-resolvers:
      - { urlPath: '/', viewName: 'redirect:/app' }
    cors:
      - path-pattern: /**
        allowCredentials: true
        maxAge: 3600
        allowedOrigins:
          - '*'
        allowedHeaders:
          - '*'
        allowedMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
      - path-pattern: /test
        allowCredentials: false
        allowedMethods:
          - GET
  prj:
    sequence-work-id: 1

info:
  app:
    name: ${application.name}
    java:
      source: @maven.compiler.source@
      target: @maven.compiler.target@
